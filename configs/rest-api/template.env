# HTTP Listener Port
PORT=3000

# CORS (`*`, `disable`, or comma-separated list of FQDNs)
CORS_ALLOWED_ORIGINS=*

# Environment
NODE_ENV=development

# Database
DATABASE_URL=mongodb://attack-workbench-database/attack-workspace

# Database Migration
WB_REST_DATABASE_MIGRATION_ENABLE=true

# Authentication Mechanism
AUTHN_MECHANISM=anonymous

# OIDC Authentication
AUTHN_OIDC_CLIENT_ID=
AUTHN_OIDC_CLIENT_SECRET=
AUTHN_OIDC_ISSUER_URL=
AUTHN_OIDC_REDIRECT_ORIGIN=http://localhost:3000

# Service Account Authentication - OIDC Client Credentials
SERVICE_ACCOUNT_OIDC_ENABLE=false
JWKS_URI=

# Service Account Authentication - Challenge API Key
WB_REST_SERVICE_ACCOUNT_CHALLENGE_APIKEY_ENABLE=false
WB_REST_TOKEN_SIGNING_SECRET=
WB_REST_TOKEN_TIMEOUT=300

# Service Account Authentication - Basic API Key
WB_REST_SERVICE_ACCOUNT_BASIC_APIKEY_ENABLE=false

# Collection Index Interval
DEFAULT_INTERVAL=300

# Configuration File Path
JSON_CONFIG_PATH=

# Logging
LOG_LEVEL=info

# Static Marking Definitions Path
WB_REST_STATIC_MARKING_DEFS_PATH=./app/lib/default-static-marking-definitions/

# Allowed Values Configuration File Path
ALLOWED_VALUES_PATH=./app/config/allowed-values.json

# Scheduler Settings
CHECK_WORKBENCH_INTERVAL=10
ENABLE_SCHEDULER=true

##########
# OPTIONAL
##########

# Session Configuration
# Generate a secure random secret with: node -e "console.log(require('crypto').randomBytes(48).toString('base64'))"
# If not provided, the REST API will generate one for you at startup (not recommended for production)
#SESSION_SECRET=

# Path to additional CA certificates file in PEM format
#NODE_EXTRA_CA_CERTS=
